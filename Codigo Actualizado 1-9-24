import java.sql.SQLOutput;
import java.util.Arrays;
import java.util.Scanner;

public class ADIOS {
    public static int pedirmetodo () {
        System.out.print("Hola, tienes los siguientes métodos - (0 - Notación decimal / 1 - Notación CDIR)");
        System.out.println();
        String error = "La opción no es válida, vuelve a intentarlo.";
        byte a = 0;
        for (int salida = 0; salida == 0; ) {
            for (int cont = 0; cont == 0; ) {
                try {
                    System.out.print("Opción: ");
                    Scanner sc = new Scanner(System.in);
                    byte metodo = sc.nextByte();
                    if (metodo == 0) {
                        System.out.println("Método elegido: Notación decimal.");
                        cont++;
                        salida++;
                    } else if (metodo == 1) {
                        System.out.println("Método elegido: Notación CDIR");
                        a = metodo;
                        cont++;
                        salida++;
                    } else {
                        System.out.println(error);
                    }
                } catch (Exception e) {
                    System.out.println(error);
                    cont++;
                }
            }
        }
        return a;
    }

    public static String[] pedir (int opcion) {
        try {
            Scanner sc = new Scanner(System.in);
            if (opcion == 0 ) { //decimal
                String[] ip = new String [4];
                ip[0] = sc.next();
                return ip;
            } else if (opcion == 1) {
                String[] ip = new String [1];
                ip[0] = sc.next();
                return ip;
            }
        } catch (Exception e) {
            System.out.println("Ha ocurrido un error.");
        }

        return null;
    }

    public static String[] segmentarOcteto(String[] ip) {
        int aux = 0;
        byte longitud = 0;
        int auxarray = 0;
        int cont = 1;
        int prueba = 3;
        /*------- COMPRUEBO LONGITUD ARRAY --------------------*/
        for (; longitud<ip[0].length(); longitud++) {
            if (String.valueOf(ip[0].charAt(longitud)).equals(".")) {
                cont++;
            }
        }
        String[] array = new String[cont];
        /*--------------------------------------------------------*/

        /*------- PARTO LA IP EN PARTES, SEGMENTADAS POR EL PUNTO -------*/
        longitud = 0;
        for (; longitud<ip[0].length(); longitud++) {
            try {
                if (String.valueOf(ip[0].charAt(longitud)).equals(".")) {
                    array[auxarray] = ip[0].substring(aux, longitud);
                    aux = longitud+1;
                    auxarray++;
                }
            } catch (Exception e) {
                System.out.println("Ha ocurrido un error.");
            }
        }
        if (longitud==ip[0].length()){
            array[auxarray] = ip[0].substring(aux, longitud);
        }
        /*----------------------------------------------------------------*/

        return array;
    }

    public static int[] stringToInt (String[] valor, int opcion) {
        if (opcion == 0) {
            int[] arrayInt=new int[4];
            for (int cont=0; cont<=3; cont++) {
                arrayInt[cont] = Integer.parseInt(valor[cont]);
            }
            return arrayInt;
        } else if (opcion == 1) {
            int[] arrayInt=new int[1];
            for (int cont=0; cont<=0; cont++) {
                arrayInt[cont] = Integer.parseInt(valor[cont]);
            }
            return arrayInt;
        }
        return null;
    }

    public static int[] mascaraCDIR (int[] cdir) {
        int[] mascara = new int[4];
        int octeto = 0;
        int[] restanteOcteto = new int[1];
        int[] listaBinarios = {128,64,32,16,8,4,2,1};
        for (;cdir[0]>7;octeto++) {
            cdir[0] = cdir[0]-8;
            mascara[octeto]=255;
            restanteOcteto[0] = cdir[0];
        }

        if (restanteOcteto[0]>0) {
            for (int cont = 0; restanteOcteto[0]>0; cont++) {
                mascara[octeto] = mascara[octeto]+listaBinarios[cont];
                restanteOcteto[0] = restanteOcteto[0]-1;
            }
        } else if (cdir[0]<8) {
            for (int cont = 0; cdir[0]>0; cont++) {
                mascara[octeto] = mascara[octeto]+listaBinarios[cont];
                cdir[0] = cdir[0]-1;
            }
        }

        for (int cont = 0; cont>4; cont--) {
            if (mascara[cont] == Integer.parseInt(null)) {
                mascara[cont] = 0;
            }
        }

        return mascara;
    }

    public static String[] pasarBinario (int[] arrayNum) {
        String[] arrayBinario = new String[4];
        for (int cont=0; cont<=3; cont++) {
            arrayBinario[cont] = Integer.toBinaryString(arrayNum[cont]);
            if (arrayBinario[cont].length()<8) {
                int ceros = 8-arrayBinario[cont].length();
                for (; ceros>0; ceros--) {
                    arrayBinario[cont] =  "0" + arrayBinario[cont];
                }
            }
        }
        return arrayBinario;
    }

    public static String[] multiplicar (String[] ipBinario, String[] mascaraBinario) {
        String[] resultado = new String[4];
        String[] array = {"", "", "", ""};

        try {
            for (int cont = 0; cont<4; cont++) { //octeto
                for (int posicion=0;posicion<8;posicion++) {
                    if (ipBinario[cont].charAt(posicion)==mascaraBinario[cont].charAt(posicion)) {
                        array[cont] = array[cont] + ipBinario[cont].charAt(posicion);
                    } else {
                        array[cont] = array[cont] + "0";
                    }
                    resultado[cont]=array[cont];
                }
                resultado[cont] = array[cont];
            }
        } catch (Exception e) {
            System.out.println("ERROR");

        }
        return resultado;
    }




    public static void main(String[] args) {
        // Apartado IP
        System.out.println("Introduce IP");
        String[] binarioIP = pasarBinario(stringToInt(segmentarOcteto(pedir(0)), 0));
        int[] binarioIPint = stringToInt(binarioIP, 0); // IP INT BINARIO
        System.out.println("IP STR binario");
        System.out.println(Arrays.toString(stringToInt(binarioIP, 0)));
        System.out.println();
        System.out.println();

        // Apartado Mascara
        System.out.println("AHORA MASCARA");
        int metodo = pedirmetodo();
        if (metodo == 0) {
            segmentarOcteto(pedir(metodo));
        } else if (metodo == 1) {
            String[] binarioMascara = pasarBinario(mascaraCDIR(stringToInt(segmentarOcteto(pedir(metodo)), metodo))); // MASCARA BINARIO
            System.out.println("Mascara INT binario");
            System.out.println(Arrays.toString(stringToInt(binarioMascara, 0)));
            System.out.println("PRESTA ATENCIÓN COÑO");
            System.out.println(Arrays.toString(multiplicar(binarioIP, binarioMascara)));
        }
    }




}
